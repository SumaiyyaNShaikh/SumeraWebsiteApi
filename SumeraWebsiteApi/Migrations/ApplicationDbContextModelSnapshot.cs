// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SumeraWebsiteApi.Data;

#nullable disable

namespace SumeraWebsiteApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CityRefId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email1")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Telephone1")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("CityRefId");

                    b.ToTable("Airline", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CityRefId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email1")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Telephone1")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.HasIndex("CityRefId");

                    b.ToTable("Airport", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Amenities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Amenities", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryRefId");

                    b.ToTable("City", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Country", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CityRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CityRefId");

                    b.ToTable("Customer", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Address3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AirlineRefId")
                        .HasColumnType("int");

                    b.Property<int?>("CityRefId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email1")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("FromAirportRefId")
                        .HasColumnType("int");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Telephone1")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("ToAirportRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirlineRefId");

                    b.HasIndex("CityRefId");

                    b.HasIndex("FromAirportRefId");

                    b.HasIndex("ToAirportRefId");

                    b.ToTable("Flight", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BookingTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerContactEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CustomerContactMobile")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("CustomerRefId")
                        .HasColumnType("int");

                    b.Property<int?>("FlightScheduleRefId")
                        .HasColumnType("int");

                    b.Property<string>("PassengerNameRecord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRefId");

                    b.HasIndex("FlightScheduleRefId");

                    b.ToTable(" FlightBooking", "transaction");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightCustomerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerRefId")
                        .HasColumnType("int");

                    b.Property<int?>("FlightBookingRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRefId");

                    b.HasIndex("FlightBookingRefId");

                    b.ToTable("FlightCustomerDetails", "transaction");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightShedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlightRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightRefId");

                    b.ToTable("FlightShedule", "transaction");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CityRefId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("star")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CityRefId");

                    b.ToTable("Hotel", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelAmenitiesLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AmenitiesRefId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmenitiesRefId");

                    b.HasIndex("HotelRefId");

                    b.ToTable("HotelAmenitiesLink", "master");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConfirmationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HotelRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelRefId");

                    b.ToTable("HotelBooking", "transaction");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelCustomerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CustomerRefId")
                        .HasColumnType("int");

                    b.Property<int?>("HotelBookingRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerRefId");

                    b.HasIndex("HotelBookingRefId");

                    b.ToTable("HotelCustomerDetails", "transaction");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Airline", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRefId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Airport", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRefId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.City", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Customer", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRefId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Flight", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Airline", "airline")
                        .WithMany()
                        .HasForeignKey("AirlineRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.Airport", "airport")
                        .WithMany()
                        .HasForeignKey("FromAirportRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("ToAirportRefId");

                    b.Navigation("Airport");

                    b.Navigation("City");

                    b.Navigation("airline");

                    b.Navigation("airport");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightBooking", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.Flight", "flight")
                        .WithMany()
                        .HasForeignKey("FlightScheduleRefId");

                    b.Navigation("customer");

                    b.Navigation("flight");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightCustomerDetails", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SumeraWebsiteApi.Data.Models.FlightBooking", "flightBooking")
                        .WithMany()
                        .HasForeignKey("FlightBookingRefId");

                    b.Navigation("customer");

                    b.Navigation("flightBooking");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.FlightShedule", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightRefId");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.Hotel", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityRefId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelAmenitiesLink", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Amenities", "amenities")
                        .WithMany()
                        .HasForeignKey("AmenitiesRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId");

                    b.Navigation("amenities");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelBooking", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("HotelRefId");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("SumeraWebsiteApi.Data.Models.HotelCustomerDetails", b =>
                {
                    b.HasOne("SumeraWebsiteApi.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerRefId");

                    b.HasOne("SumeraWebsiteApi.Data.Models.HotelBooking", "HotelBooking")
                        .WithMany()
                        .HasForeignKey("HotelBookingRefId");

                    b.Navigation("Customer");

                    b.Navigation("HotelBooking");
                });
#pragma warning restore 612, 618
        }
    }
}
